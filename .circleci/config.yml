version: 2.1

references:
  postgres: &postgres cimg/postgres:12.11

executors:
  trdm_compiler:
    working_directory: ~/transcom/trdm-lambda
    docker:
      - image: *postgres
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
        environment:
          POSTGRES_PASSWORD: mysecretpassword
          POSTGRES_DB: test_db
          # use ramdisk for better performance
          # https://circleci.com/docs/databases/#optimizing-postgresql-images
          PGDATA: /dev/shm/pgdata/data
        # override entrypoint/command for ramdisk
        # this has been fixed in versions of postgres newer than 13.9
        # https://github.com/CircleCI-Public/cimg-postgres/commit/3b320e26e4f187d0cd144efea1bc26cf5a2b68b0
        # milmove is still on 12.11
        entrypoint: /bin/bash
        command: -c 'ln -s /dev/shm/pgdata/data /var/lib/postgresql/ && exec /usr/local/bin/docker-entrypoint.sh postgres'

  trdm_tester:
    docker:
      - image: milmove/docker-mvn
        auth:
          password: $DOCKER_PASSWORD
          username: $DOCKER_USERNAME
      - image: *postgres
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
        environment:
          POSTGRES_PASSWORD: mysecretpassword
          POSTGRES_DB: test_db
          # use ramdisk for better performance
          # https://circleci.com/docs/databases/#optimizing-postgresql-images
          PGDATA: /dev/shm/pgdata/data
        # override entrypoint/command for ramdisk
        # this has been fixed in versions of postgres newer than 13.9
        # https://github.com/CircleCI-Public/cimg-postgres/commit/3b320e26e4f187d0cd144efea1bc26cf5a2b68b0
        # milmove is still on 12.11
        entrypoint: /bin/bash
        command: -c 'ln -s /dev/shm/pgdata/data /var/lib/postgresql/ && exec /usr/local/bin/docker-entrypoint.sh postgres'

jobs:
  test_setup:
    executor: trdm_compiler
    steps:
      - run:
          name: Checkout mymove repository
          command: |
            git clone https://github.com/transcom/mymove.git ~/mymove
      - run:
          name: Build and run test db
          command: |
            cd ~/mymove
            make db_test_run 

  mvn_test:
    executor: trdm_tester
    steps:
      - checkout
      - run:
          name: Copy Workflow Job ID to file
          command: |
            echo "export SERVER_TEST_JOB_ID=$CIRCLE_WORKFLOW_JOB_ID" >> server_test_job_id.env
      - run:
          name: Maven tests
          command: mvn test
      - persist_to_workspace:
          root: .
          paths:
            - server_test_job_id.env

  sam_package:
    executor: trdm_tester
    steps:
      - checkout
      - run:
          name: Build
          command: scripts/build

  upload_release_to_github:
    docker:
      - image: milmove/docker-mvn
        auth:
          password: $DOCKER_PASSWORD
          username: $DOCKER_USERNAME
    steps:
      - checkout
      - run:
          name: Release
          command: scripts/release $CIRCLE_PROJECT_USERNAME $CIRCLE_PROJECT_REPONAME << pipeline.git.tag >>
      - run:
          name: Move zips and checksums to workspace
          command: |
            mkdir -p workspace
            cp deployment-package.stg.zip workspace/
            cp stg-checksums.txt workspace/
            cp deployment-package.prd.zip workspace/
            cp prd-checksums.txt workspace/
      - persist_to_workspace:
          root: workspace
          paths:
            - "*.zip"
            - "*.txt"
      - attach_workspace:
          at: workspace
      - store_artifacts:
          path: workspace/*.zip
          destination: artifacts
      - store_artifacts:
          path: workspace/*.txt
          destination: artifacts

workflows:
  build:
    jobs:
      - test_setup
      - mvn_test
      - sam_package:
          requires:
            - test_setup
            - mvn_test
          context:
            - org-global

  release:
    jobs:
      - test_setup
      - mvn_test
      - sam_package
      - upload_release_to_github:
          context:
            - org-global
          filters:
            branches:
              only: main
            tags:
              only: /^v.*/
